/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
buildscript {
    ext {
        kotlinVersion = '1.3.70'
        ktor_version = '1.3.2'
        klint_version = "9.2.1"
        johnrengelman_version = "5.2.0"
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }

}

plugins {
    id 'jacoco'
    id 'org.jlleitschuh.gradle.ktlint' version "$klint_version"
    id 'com.github.johnrengelman.shadow' version "$johnrengelman_version"
    id 'java'
}

jacoco {
    toolVersion = "0.8.5"
}

group = 'kotlin-boilerplate'
version = '1.0-SNAPSHOT'

allprojects {
    repositories {
        jcenter()
    }

    apply plugin: 'kotlin'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: 'jacoco'

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib"
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        testCompile "junit:junit:4.12"
        testImplementation "org.mockito:mockito-core:2.19.0"
        testImplementation "org.amshove.kluent:kluent:1.40"
        testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"
    }
}

subprojects {
    sourceSets {
        main.kotlin.srcDirs += 'src/main'
        test.kotlin.srcDirs += 'src/test'
    }
}

ktlint {
    debug = false
    verbose = false
}

task report(type: JacocoReport) {

    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

report.dependsOn {
    subprojects*.test
}